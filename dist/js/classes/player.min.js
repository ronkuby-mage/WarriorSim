class Player{static getConfig(s){return{race:$('select[name="race"]').val(),aqbooks:"Yes"==$('select[name="aqbooks"]').val(),weaponrng:"Yes"==$('select[name="weaponrng"]').val(),spelldamage:parseInt($('input[name="spelldamage"]').val()),target:{level:parseInt($('input[name="targetlevel"]').val()),basearmor:parseInt($('input[name="targetarmor"]').val()),armor:parseInt($('input[name="targetarmor"]').val()),defense:5*parseInt($('input[name="targetlevel"]').val()),mitigation:1-parseInt($('input[name="targetresistance"]').val())/6e3*15,binaryresist:parseInt(1e4-8300*(1-.15*parseInt($('input[name="targetresistance"]').val())/60))}}}constructor(s,t,e,a){a||(a=Player.getConfig()),this.rage=0,this.level=60,this.timer=0,this.itemtimer=0,this.dodgetimer=0,this.extraattacks=0,this.batchedextras=0,this.nextswinghs=!1,this.nextswingcl=!1,this.race=a.race,this.aqbooks=a.aqbooks,this.weaponrng=a.weaponrng,this.spelldamage=a.spelldamage,this.target=a.target,this.base={ap:0,agi:0,str:0,hit:0,crit:0,spellcrit:0,skill_0:5*this.level,skill_1:5*this.level,skill_2:5*this.level,skill_3:5*this.level,skill_4:5*this.level,skill_5:5*this.level,haste:1,strmod:1,agimod:1,dmgmod:1,apmod:1},1==e?(this.testEnch=s,this.testEnchType=t):2==e?(this.testTempEnch=s,this.testTempEnchType=t):3==e?0==t?this.base.ap+=s:1==t?this.base.crit+=s:2==t?this.base.hit+=s:3==t&&(this.base.str+=s):(this.testItem=s,this.testItemType=t),this.stats={},this.auras={},this.spells={},this.items=[],this.addRace(),this.addTalents(),this.addGear(),this.mh&&(this.addSets(),this.addEnchants(),this.addTempEnchants(),this.addBuffs(),this.addSpells(),this.talents.flurry&&(this.auras.flurry=new Flurry(this)),this.talents.deepwounds&&(this.auras.deepwounds=new DeepWounds(this)),this.spells.overpower&&(this.auras.battlestance=new BattleStance(this)),this.spells.bloodrage&&(this.auras.bloodrage=new BloodrageAura(this)),this.items.includes(9449)&&(this.auras.pummeler=new Pummeler(this)),this.items.includes(14554)&&(this.auras.cloudkeeper=new Cloudkeeper(this)),this.items.includes(20130)&&(this.auras.flask=new Flask(this)),this.items.includes(23041)&&(this.auras.slayer=new Slayer(this)),this.items.includes(22954)&&(this.auras.spider=new Spider(this)),this.items.includes(23570)&&(this.auras.gabbar=new Gabbar(this)),this.items.includes(21180)&&(this.auras.earthstrike=new Earthstrike(this)),this.items.includes(21670)&&(this.auras.swarmguard=new Swarmguard(this)),this.items.includes(19949)&&(this.auras.zandalarian=new Zandalarian(this)),this.update(),this.oh&&(this.oh.timer=Math.round(1e3*this.oh.speed/this.stats.haste/2)))}addRace(){for(let s of races)s.name==this.race&&(this.base.aprace=s.ap,this.base.ap+=s.ap,this.base.str+=s.str,this.base.agi+=s.agi,this.base.skill_0+=s.skill_0,this.base.skill_1+=s.skill_1,this.base.skill_2+=s.skill_2,this.base.skill_3+=s.skill_3)}addTalents(){this.talents={};for(let s in talents)for(let t of talents[s].t)this.talents=Object.assign(this.talents,t.aura(t.c))}addGear(){for(let type in gear)for(let item of gear[type])if(this.testItemType==type&&this.testItem==item.id||this.testItemType!=type&&item.selected){for(let s in this.base)this.base[s]+=item[s]||0;if(item.skill&&item.skill>0)if("Varied"==item.type)this.base.skill_1+=item.skill,this.base.skill_2+=item.skill,this.base.skill_3+=item.skill;else{let s=WEAPONTYPE[item.type.toUpperCase()];this.base["skill_"+s]+=item.skill}if("mainhand"!=type&&"offhand"!=type&&"twohand"!=type||this.addWeapon(item,type),17111==item.id&&(this.attackproc={},this.attackproc.chance=100*item.procchance,this.attackproc.magicdmg=item.magicdmg),item.procchance&&("trinket1"==type||"trinket2"==type)){let proc={};proc.chance=100*item.procchance,proc.extra=item.procextra,proc.magicdmg=item.magicdmg,item.procspell&&(this.auras[item.procspell.toLowerCase()]=eval("new "+item.procspell+"(this)"),proc.spell=this.auras[item.procspell.toLowerCase()]),this["trinketproc"+(this.trinketproc1?2:1)]=proc}this.items.push(item.id)}if(this.mh&&this.mh.twohand)for(let s in gear)for(let t of gear[s])if(("hands"==s||"head"==s)&&(this.testItemType==s&&this.testItem==t.id||this.testItemType!=s&&t.selected)&&t.skill&&t.skill>0)if("Varied"==t.type)this.base.skill_1-=t.skill,this.base.skill_2-=t.skill,this.base.skill_3-=t.skill;else{let s=WEAPONTYPE[t.type.toUpperCase()];this.base["skill_"+s]-=t.skill}}addWeapon(s,t){let e,a;for(let s of enchant[t])s.temp||(this.testEnchType==t&&this.testEnch==s.id?e=s:this.testEnchType!=t&&s.selected&&(e=s));for(let s of enchant[t])s.temp&&(this.testTempEnchType==t&&this.testTempEnch==s.id?a=s:this.testTempEnchType!=t&&s.selected&&(a=s));"mainhand"==t&&(this.mh=new Weapon(this,s,e,a,!1,!1)),"offhand"==t&&(this.oh=new Weapon(this,s,e,a,!0,!1)),"twohand"==t&&(this.mh=new Weapon(this,s,e,a,!1,!0))}addEnchants(){for(let s in enchant)for(let t of enchant[s])if(!t.temp&&(this.testEnchType==s&&this.testEnch==t.id||this.testEnchType!=s&&t.selected))for(let s in this.base)"haste"==s?this.base.haste*=1+t.haste/100||1:this.base[s]+=t[s]||0}addTempEnchants(){for(let s in enchant)for(let t of enchant[s])if(t.temp&&("mainhand"!=s&&"twohand"!=s||!this.mh.windfury)&&(this.testTempEnchType==s&&this.testTempEnch==t.id||this.testTempEnchType!=s&&t.selected))for(let s in this.base)"haste"==s?this.base.haste*=1+t.haste/100||1:this.base[s]+=t[s]||0}addSets(){for(let set of sets){let counter=0;for(let s of set.items)this.items.includes(s)&&counter++;if(0!=counter)for(let bonus of set.bonus)if(counter>=bonus.count){for(let s in bonus.stats)this.base[s]+=bonus.stats[s]||0;bonus.stats.procspell&&(this.attackproc={},this.attackproc.chance=100*bonus.stats.procchance,this.auras[bonus.stats.procspell.toLowerCase()]=eval("new "+bonus.stats.procspell+"(this)"),this.attackproc.spell=this.auras[bonus.stats.procspell.toLowerCase()]),bonus.stats.enhancedbs&&(this.enhancedbs=!0)}}}addBuffs(){for(let s of buffs)if(s.active){let t=0;if("battleshout"==s.group){let e=this.aqbooks?s.ap+39:s.ap;27578==s.id&&this.enhancedbs&&(e+=30),t=(e=~~(e*(1+this.talents.impbattleshout)))-s.ap}"zerkstance"==s.group&&(this.zerkstance=!0),"vaelbuff"==s.group&&(this.vaelbuff=!0),"dragonbreath"==s.group&&(this.dragonbreath=!0),this.base.ap+=(s.ap||0)+t,this.base.agi+=s.agi||0,this.base.str+=s.str||0,this.base.crit+=s.crit||0,this.base.hit+=s.hit||0,this.base.spellcrit+=s.spellcrit||0,this.base.agimod*=1+s.agimod/100||1,this.base.strmod*=1+s.strmod/100||1,this.base.dmgmod*=1+s.dmgmod/100||1,this.base.haste*=1+s.haste/100||1,"blessingmight"==s.group&&this.aqbooks&&(this.base.ap+=36),"graceair"==s.group&&this.aqbooks&&(this.base.agi+=10),"strengthearth"==s.group&&this.aqbooks&&(this.base.str+=16)}}addSpells(){for(let spell of spells)spell.active&&(spell.aura?this.auras[spell.classname.toLowerCase()]=eval(`new ${spell.classname}(this)`):this.spells[spell.classname.toLowerCase()]=eval(`new ${spell.classname}(this)`))}reset(s){this.rage=s,this.timer=0,this.itemtimer=0,this.dodgetimer=0,this.spelldelay=0,this.heroicdelay=0,this.mh.timer=0,this.oh&&(this.oh.timer=Math.round(1e3*this.oh.speed/this.stats.haste/2)),this.extraattacks=0,this.batchedextras=0,this.nextswinghs=!1,this.nextswingcl=!1;for(let s in this.spells)this.spells[s].timer=0,this.spells[s].stacks=0;for(let s in this.auras)this.auras[s].timer=0,this.auras[s].firstuse=!0,this.auras[s].stacks=0;this.auras.deepwounds&&(this.auras.deepwounds.idmg=0),this.update()}update(){this.updateAuras(),this.updateArmorReduction(),this.mh.glanceChance=this.getGlanceChance(this.mh),this.mh.miss=this.getMissChance(this.mh),this.mh.dwmiss=this.mh.miss,this.mh.dodge=this.getDodgeChance(this.mh),this.oh&&(this.mh.dwmiss=this.getDWMissChance(this.mh),this.oh.glanceChance=this.getGlanceChance(this.oh),this.oh.miss=this.getMissChance(this.oh),this.oh.dwmiss=this.getDWMissChance(this.oh),this.oh.dodge=this.getDodgeChance(this.oh))}updateAuras(){for(let s in this.base)this.stats[s]=this.base[s];for(let s in this.auras)if(this.auras[s].timer){for(let t in this.auras[s].stats)this.stats[t]+=this.auras[s].stats[t];for(let t in this.auras[s].mult_stats)this.stats[t]*=1+this.auras[s].mult_stats[t]/100}this.stats.str=~~(this.stats.str*this.stats.strmod),this.stats.agi=~~(this.stats.agi*this.stats.agimod),this.stats.ap+=2*this.stats.str,this.stats.crit+=this.stats.agi/20,this.crit=this.getCritChance(),1!=this.stats.apmod&&(this.stats.ap+=~~((this.base.aprace+2*this.stats.str)*(this.stats.apmod-1)))}updateStrength(){this.stats.str=this.base.str,this.stats.ap=this.base.ap;for(let s in this.auras)this.auras[s].timer&&(this.auras[s].stats.str&&(this.stats.str+=this.auras[s].stats.str),this.auras[s].stats.ap&&(this.stats.ap+=this.auras[s].stats.ap));this.stats.str=~~(this.stats.str*this.stats.strmod),this.stats.ap+=2*this.stats.str,1!=this.stats.apmod&&(this.stats.ap+=~~((this.base.aprace+2*this.stats.str)*(this.stats.apmod-1)))}updateAP(){this.stats.ap=this.base.ap;for(let s in this.auras)this.auras[s].timer&&this.auras[s].stats.ap&&(this.stats.ap+=this.auras[s].stats.ap);this.stats.ap+=2*this.stats.str,1!=this.stats.apmod&&(this.stats.ap+=~~((this.base.aprace+2*this.stats.str)*(this.stats.apmod-1)))}updateHaste(){this.stats.haste=this.base.haste,this.auras.flurry&&this.auras.flurry.timer&&(this.stats.haste*=1+this.auras.flurry.mult_stats.haste/100),this.auras.berserking&&this.auras.berserking.timer&&(this.stats.haste*=1+this.auras.berserking.mult_stats.haste/100),this.auras.empyrean&&this.auras.empyrean.timer&&(this.stats.haste*=1+this.auras.empyrean.mult_stats.haste/100),this.auras.eskhandar&&this.auras.eskhandar.timer&&(this.stats.haste*=1+this.auras.eskhandar.mult_stats.haste/100),this.auras.pummeler&&this.auras.pummeler.timer&&(this.stats.haste*=1+this.auras.pummeler.mult_stats.haste/100),this.auras.spider&&this.auras.spider.timer&&(this.stats.haste*=1+this.auras.spider.mult_stats.haste/100)}updateBonusDmg(){let s=0;this.auras.zeal&&this.auras.zeal.timer&&(s+=this.auras.zeal.stats.bonusdmg),this.auras.zandalarian&&this.auras.zandalarian.timer&&(s+=this.auras.zandalarian.stats.bonusdmg),this.mh.bonusdmg=this.mh.basebonusdmg+s,this.oh&&(this.oh.bonusdmg=this.oh.basebonusdmg+s)}updateArmorReduction(){this.target.armor=this.target.basearmor,this.auras.annihilator&&this.auras.annihilator.timer&&(this.target.armor=Math.max(this.target.armor-this.auras.annihilator.stacks*this.auras.annihilator.armor,0)),this.auras.rivenspike&&this.auras.rivenspike.timer&&(this.target.armor=Math.max(this.target.armor-this.auras.rivenspike.stacks*this.auras.rivenspike.armor,0)),this.auras.bonereaver&&this.auras.bonereaver.timer&&(this.target.armor=Math.max(this.target.armor-this.auras.bonereaver.stacks*this.auras.bonereaver.armor,0)),this.auras.swarmguard&&this.auras.swarmguard.timer&&(this.target.armor=Math.max(this.target.armor-this.auras.swarmguard.stacks*this.auras.swarmguard.armor,0)),this.armorReduction=this.getArmorReduction()}updateDmgMod(){this.stats.dmgmod=this.base.dmgmod;for(let s in this.auras)this.auras[s].timer&&this.auras[s].mult_stats.dmgmod&&(this.stats.dmgmod*=1+this.auras[s].mult_stats.dmgmod/100)}getGlanceReduction(s){let t=this.target.defense-this.stats["skill_"+s.type],e=Math.min(1.3-.05*t,.91),a=Math.min(1.2-.03*t,.99);return this.weaponrng?Math.random()*(a-e)+e:avg(e,a)}getGlanceChance(s){return 10+2*(this.target.defense-Math.min(5*this.level,this.stats["skill_"+s.type]))}getMissChance(s){let t=this.target.defense-this.stats["skill_"+s.type],e=5+(t>10?.2*t:.1*t);return e-=t>10?this.stats.hit-1:this.stats.hit}getDWMissChance(s){let t=this.target.defense-this.stats["skill_"+s.type],e=5+(t>10?.2*t:.1*t);return e=.8*e+20,e-=t>10?this.stats.hit-1:this.stats.hit}getCritChance(){let s=this.stats.crit+(this.talents.crit||0)+1*(this.level-this.target.level)+.6*(this.level-this.target.level);return Math.max(s,0)}getDodgeChance(s){return 5+.1*(this.target.defense-this.stats["skill_"+s.type])}getArmorReduction(){let s=this.target.armor/(this.target.armor+400+85*this.level);return s>.75?.75:s}addRage(s,t,e,a){(!a||a instanceof HeroicStrike||a instanceof HeroicStrikeExecute)&&t!=RESULT.MISS&&t!=RESULT.DODGE&&this.talents.umbridledwrath&&rng10k()<100*this.talents.umbridledwrath&&(this.rage+=1),a?(a instanceof Execute&&(a.result=t),t!=RESULT.MISS&&t!=RESULT.DODGE||(this.rage+=a.refund?.8*a.cost:0)):t==RESULT.DODGE?this.rage+=e.avgdmg()/230.6*7.5*.75:t!=RESULT.MISS&&(this.rage+=s/230.6*7.5),this.rage>100&&(this.rage=100)}steptimer(s){return this.timer<=s?(this.timer=0,!0):(this.timer-=s,!1)}stepitemtimer(s){return this.itemtimer<=s?(this.itemtimer=0,!0):(this.itemtimer-=s,!1)}stepdodgetimer(s){this.dodgetimer<=s?this.dodgetimer=0:this.dodgetimer-=s}stepauras(){this.mh.proc1&&this.mh.proc1.spell&&this.mh.proc1.spell.timer&&this.mh.proc1.spell.step(),this.mh.proc2&&this.mh.proc2.spell&&this.mh.proc2.spell.timer&&this.mh.proc2.spell.step(),this.oh&&this.oh.proc1&&this.oh.proc1.spell&&this.oh.proc1.spell.timer&&this.oh.proc1.spell.step(),this.oh&&this.oh.proc2&&this.oh.proc2.spell&&this.oh.proc2.spell.timer&&this.oh.proc2.spell.step(),this.auras.mightyragepotion&&this.auras.mightyragepotion.firstuse&&this.auras.mightyragepotion.timer&&this.auras.mightyragepotion.step(),this.auras.recklessness&&this.auras.recklessness.firstuse&&this.auras.recklessness.timer&&this.auras.recklessness.step(),this.auras.deathwish&&this.auras.deathwish.firstuse&&this.auras.deathwish.timer&&this.auras.deathwish.step(),this.auras.cloudkeeper&&this.auras.cloudkeeper.firstuse&&this.auras.cloudkeeper.timer&&this.auras.cloudkeeper.step(),this.auras.flask&&this.auras.flask.firstuse&&this.auras.flask.timer&&this.auras.flask.step(),this.auras.battlestance&&this.auras.battlestance.timer&&this.auras.battlestance.step(),this.auras.bloodfury&&this.auras.bloodfury.firstuse&&this.auras.bloodfury.timer&&this.auras.bloodfury.step(),this.auras.berserking&&this.auras.berserking.firstuse&&this.auras.berserking.timer&&this.auras.berserking.step(),this.auras.slayer&&this.auras.slayer.firstuse&&this.auras.slayer.timer&&this.auras.slayer.step(),this.auras.spider&&this.auras.spider.firstuse&&this.auras.spider.timer&&this.auras.spider.step(),this.auras.earthstrike&&this.auras.earthstrike.firstuse&&this.auras.earthstrike.timer&&this.auras.earthstrike.step(),this.auras.pummeler&&this.auras.pummeler.firstuse&&this.auras.pummeler.timer&&this.auras.pummeler.step(),this.auras.swarmguard&&this.auras.swarmguard.firstuse&&this.auras.swarmguard.timer&&this.auras.swarmguard.step(),this.auras.zandalarian&&this.auras.zandalarian.firstuse&&this.auras.zandalarian.timer&&this.auras.zandalarian.step(),this.mh.windfury&&this.mh.windfury.timer&&this.mh.windfury.step(),this.trinketproc1&&this.trinketproc1.spell&&this.trinketproc1.spell.timer&&this.trinketproc1.spell.step(),this.trinketproc2&&this.trinketproc2.spell&&this.trinketproc2.spell.timer&&this.trinketproc2.spell.step(),this.attackproc&&this.attackproc.spell&&this.attackproc.spell.timer&&this.attackproc.spell.step(),this.auras.deepwounds&&this.auras.deepwounds.timer&&this.auras.deepwounds.step()}endauras(){this.mh.proc1&&this.mh.proc1.spell&&this.mh.proc1.spell.timer&&this.mh.proc1.spell.end(),this.mh.proc2&&this.mh.proc2.spell&&this.mh.proc2.spell.timer&&this.mh.proc2.spell.end(),this.oh&&this.oh.proc1&&this.oh.proc1.spell&&this.oh.proc1.spell.timer&&this.oh.proc1.spell.end(),this.oh&&this.oh.proc2&&this.oh.proc2.spell&&this.oh.proc2.spell.timer&&this.oh.proc2.spell.end(),this.auras.mightyragepotion&&this.auras.mightyragepotion.firstuse&&this.auras.mightyragepotion.timer&&this.auras.mightyragepotion.end(),this.auras.recklessness&&this.auras.recklessness.firstuse&&this.auras.recklessness.timer&&this.auras.recklessness.end(),this.auras.deathwish&&this.auras.deathwish.firstuse&&this.auras.deathwish.timer&&this.auras.deathwish.end(),this.auras.cloudkeeper&&this.auras.cloudkeeper.firstuse&&this.auras.cloudkeeper.timer&&this.auras.cloudkeeper.end(),this.auras.flask&&this.auras.flask.firstuse&&this.auras.flask.timer&&this.auras.flask.end(),this.auras.battlestance&&this.auras.battlestance.timer&&this.auras.battlestance.end(),this.auras.bloodfury&&this.auras.bloodfury.firstuse&&this.auras.bloodfury.timer&&this.auras.bloodfury.end(),this.auras.berserking&&this.auras.berserking.firstuse&&this.auras.berserking.timer&&this.auras.berserking.end(),this.auras.slayer&&this.auras.slayer.firstuse&&this.auras.slayer.timer&&this.auras.slayer.end(),this.auras.spider&&this.auras.spider.firstuse&&this.auras.spider.timer&&this.auras.spider.end(),this.auras.gabbar&&this.auras.gabbar.firstuse&&this.auras.gabbar.timer&&this.auras.gabbar.end(),this.auras.earthstrike&&this.auras.earthstrike.firstuse&&this.auras.earthstrike.timer&&this.auras.earthstrike.end(),this.auras.pummeler&&this.auras.pummeler.firstuse&&this.auras.pummeler.timer&&this.auras.pummeler.end(),this.auras.swarmguard&&this.auras.swarmguard.firstuse&&this.auras.swarmguard.timer&&this.auras.swarmguard.end(),this.auras.zandalarian&&this.auras.zandalarian.firstuse&&this.auras.zandalarian.timer&&this.auras.zandalarian.end(),this.mh.windfury&&this.mh.windfury.timer&&this.mh.windfury.end(),this.trinketproc1&&this.trinketproc1.spell&&this.trinketproc1.spell.timer&&this.trinketproc1.spell.end(),this.trinketproc2&&this.trinketproc2.spell&&this.trinketproc2.spell.timer&&this.trinketproc2.spell.end(),this.attackproc&&this.attackproc.spell&&this.attackproc.spell.timer&&this.attackproc.spell.end(),this.auras.flurry&&this.auras.flurry.timer&&this.auras.flurry.end(),this.auras.deepwounds&&this.auras.deepwounds.timer&&this.auras.deepwounds.end()}rollweapon(s){let t=0,e=rng10k();return e<(t+=100*Math.max(this.nextswinghs?s.miss:s.dwmiss,0))?RESULT.MISS:e<(t+=100*s.dodge)?RESULT.DODGE:e<(t+=100*s.glanceChance)?RESULT.GLANCE:e<(t+=100*(this.crit+s.crit))?RESULT.CRIT:RESULT.HIT}rollspell(s){let t=0,e=rng10k();if(e<(t+=100*Math.max(this.mh.miss,0)))return RESULT.MISS;if(s.canDodge&&e<(t+=100*this.mh.dodge))return RESULT.DODGE;s.weaponspell||(e=rng10k(),t=0);let a=this.crit+this.mh.crit;return s instanceof Overpower&&(a+=this.talents.overpowercrit),e<(t+=100*a)&&!s.nocrit?RESULT.CRIT:RESULT.HIT}attackmh(s){this.stepauras();let t,e=null,a=0;this.nextswinghs?(this.nextswinghs=!1,this.spells.heroicstrike&&this.spells.heroicstrike.cost<=this.rage?(t=this.rollspell(this.spells.heroicstrike),e=this.spells.heroicstrike,this.rage-=e.cost):this.spells.heroicstrikeexecute&&this.spells.heroicstrikeexecute.cost<=this.rage?(t=this.rollspell(this.spells.heroicstrikeexecute),e=this.spells.heroicstrikeexecute,this.rage-=e.cost):t=this.rollweapon(s)):t=this.rollweapon(s);let i=s.dmg(e);a=this.procattack(e,s,t),t==RESULT.DODGE&&(this.dodgetimer=5e3),t==RESULT.GLANCE&&(i*=this.getGlanceReduction(s)),t==RESULT.CRIT&&(i*=2+(e?this.talents.abilitiescrit:0),this.proccrit()),s.use();let r=this.dealdamage(i,t,s,e);return e?(e.totaldmg+=r,e.data[t]++):(s.totaldmg+=r,s.data[t]++),s.totalprocdmg+=a,r+a}attackoh(s){this.stepauras();let t,e=0;t=this.rollweapon(s);let a=s.dmg();e=this.procattack(null,s,t),t==RESULT.DODGE&&(this.dodgetimer=5e3),t==RESULT.GLANCE&&(a*=this.getGlanceReduction(s)),t==RESULT.CRIT&&(a*=2,this.proccrit()),s.use();let i=this.dealdamage(a,t,s);return s.data[t]++,s.totaldmg+=i,s.totalprocdmg+=e,i+e}cast(s){if(this.stepauras(),s.use(),s.useonly)return 0;let t=0,e=s.dmg()*this.mh.modifier,a=this.rollspell(s);t=this.procattack(s,this.mh,a),a==RESULT.DODGE&&(this.dodgetimer=5e3),a==RESULT.CRIT&&(e*=2+this.talents.abilitiescrit,this.proccrit());let i=this.dealdamage(e,a,this.mh,s);return s.data[a]++,s.totaldmg+=i,this.mh.totalprocdmg+=t,i+t}dealdamage(s,t,e,a){return t!=RESULT.MISS&&t!=RESULT.DODGE?(s*=this.stats.dmgmod,s*=1-this.armorReduction,this.addRage(s,t,e,a),~~s):(this.addRage(s,t,e,a),0)}proccrit(){this.auras.flurry&&this.auras.flurry.use(),this.auras.deepwounds&&this.auras.deepwounds.use()}procattack(s,t,e){let a=0;return e!=RESULT.MISS&&e!=RESULT.DODGE&&(t.proc1&&rng10k()<t.proc1.chance&&(!t.proc1.spell||t.proc1.gcd&&this.timer&&this.timer<1500||t.proc1.spell.use(),t.proc1.magicdmg&&(a+=this.magicproc(t.proc1)),t.proc1.physdmg&&(a+=this.physproc(t.proc1.physdmg)),t.proc1.extra&&(this.extraattacks+=t.proc1.extra)),t.proc2&&rng10k()<t.proc2.chance&&(t.proc2.spell&&t.proc2.spell.use(),t.proc2.magicdmg&&(a+=this.magicproc(t.proc2))),t.windfury&&!this.auras.windfury.timer&&rng10k()<2e3&&t.windfury.use(),this.trinketproc1&&rng10k()<this.trinketproc1.chance&&(this.trinketproc1.extra&&(this.batchedextras+=this.trinketproc1.extra),this.trinketproc1.magicdmg&&(a+=this.magicproc(this.trinketproc1)),this.trinketproc1.spell&&this.trinketproc1.spell.use()),this.trinketproc2&&rng10k()<this.trinketproc2.chance&&(this.trinketproc2.extra&&(this.batchedextras+=this.trinketproc2.extra),this.trinketproc2.magicdmg&&(a+=this.magicproc(this.trinketproc2)),this.trinketproc2.spell&&this.trinketproc2.spell.use()),this.attackproc&&rng10k()<this.attackproc.chance&&(this.attackproc.magicdmg&&(a+=this.magicproc(this.attackproc)),this.attackproc.spell&&this.attackproc.spell.use()),this.talents.swordproc&&t.type==WEAPONTYPE.SWORD&&rng10k()<100*this.talents.swordproc&&this.extraattacks++,this.auras.swarmguard&&this.auras.swarmguard.timer&&rng10k()<this.auras.swarmguard.chance&&this.auras.swarmguard.proc(),this.auras.zandalarian&&this.auras.zandalarian.timer&&this.auras.zandalarian.proc(),this.dragonbreath&&rng10k()<400&&(a+=this.magicproc({magicdmg:60,coeff:1}))),(!s||s instanceof HeroicStrike||s instanceof HeroicStrikeExecute)&&(this.auras.flurry&&this.auras.flurry.stacks&&this.auras.flurry.proc(),this.mh.windfury&&this.mh.windfury.stacks&&this.mh.windfury.proc()),a}magicproc(s){let t=1,e=1700,a=s.magicdmg;return s.binaryspell?e=this.target.binaryresist:t*=this.target.mitigation,rng10k()<e?0:(rng10k()<100*this.stats.spellcrit&&(t*=1.5),s.coeff&&(a+=this.spelldamage*s.coeff),~~(a*t))}physproc(s){let t=0,e=rng10k();return e<(t+=100*Math.max(this.mh.miss,0))&&(s=0),e<(t+=100*this.mh.dodge)&&(this.dodgetimer=5e3,s=0),(e=rng10k())<100*(this.crit+this.mh.crit)&&(s*=2),s*this.stats.dmgmod*this.mh.modifier}serializeStats(){return{auras:this.auras,spells:this.spells,mh:this.mh,oh:this.oh}}log(s){console.log(`${step.toString().padStart(5," ")} | ${this.rage.toFixed(2).padStart(6," ")} | ${s}`)}}
